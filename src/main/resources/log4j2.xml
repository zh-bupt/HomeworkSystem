<!--<?xml version="1.0" encoding="UTF-8"?>-->

<!--&lt;!&ndash; status : 这个用于设置log4j2自身内部的信息输出,可以不设置,当设置成trace时,会看到log4j2内部各种详细输出 ,默认OFF-->
	<!--monitorInterval : Log4j能够自动检测修改配置文件和重新配置本身, 设置间隔秒数。-->
	<!--%d{yyyy-MM-dd HH:mm:ss, SSS} : 日志生产时间-->
    <!--%p : 日志输出格式-->
    <!--%c : logger的名称-->
    <!--%m : 日志内容，即 logger.info("message")-->
    <!--%n : 换行符-->
    <!--%C : Java类名-->
    <!--%L : 日志输出所在行数-->
    <!--%M : 日志输出所在方法名-->
    <!--hostName : 本地机器名 hostAddress : 本地ip地址-->
<!--&ndash;&gt;-->
<!--<Configuration status="OFF">-->
    <!--<Properties>-->
        <!--&lt;!&ndash; 配置日志文件输出目录 &ndash;&gt;-->
        <!--<property name="trans_log_path" value="/app/xxx_logs/" />-->
        <!--<property name="file_size" value="5MB" />-->
        <!--<property name="file_encode" value="UTF-8" />-->
        <!--<property name="file_max_count" value="2000" />-->
        <!--<property name="file_dir">${sys:catalina.home}/logs/</property>-->
        <!--<property name="output_log_level">debug</property>&lt;!&ndash; 日志输出级别 &ndash;&gt;-->
        <!--<property name="file_prefix">gateway_</property>-->
        <!--<property name="log_pattern" value="[gateway] %x %-5level %d{yyyy-MM-dd HH:mm:ss,SSS} [%t] %c.%M(%L) | %msg%xEx%n" />-->
    <!--</Properties>-->

    <!--<Appenders>-->
        <!--&lt;!&ndash;这个输出控制台的配置 &ndash;&gt;-->
        <!--<Console name="Console" target="SYSTEM_OUT">-->
            <!--&lt;!&ndash; 控制台只输出level及以上级别的信息(onMatch),其他的直接拒绝(onMismatch) &ndash;&gt;-->
            <!--<ThresholdFilter level="trace" onMatch="ACCEPT" onMismatch="DENY" />-->
            <!--&lt;!&ndash;这个都知道是输出日志的格式 &ndash;&gt;-->
            <!--<PatternLayout pattern="${log_pattern}" />-->
        <!--</Console>-->

        <!--&lt;!&ndash; 重要的是，如果有多个ThresholdFilter，那么Filters是必须的，同时在Filters中，首先要过滤不符合的日志级别，把不需要的首先DENY掉，然后再ACCEPT需要的日志级别，这个次序不能搞颠倒。 &ndash;&gt;-->

        <!--&lt;!&ndash; 这个会打印出所有的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档 &ndash;&gt;-->
        <!--&lt;!&ndash; 按日生成归档日志 &ndash;&gt;-->
        <!--&lt;!&ndash; 设置日志格式并配置日志压缩格式(service.log.年份.gz) &ndash;&gt;-->

        <!--&lt;!&ndash; 显示INFO级别的信息 &ndash;&gt;-->
        <!--<RollingRandomAccessFile name="INFO_LOG" fileName="${trans_log_path}/${file_prefix}info.log" filePattern="${trans_log_path}/${file_prefix}info.log.%d{yyyy-MM-dd}.log.gz">-->
            <!--<PatternLayout>-->
                <!--<pattern>${log_pattern}</pattern>-->
            <!--</PatternLayout>-->
            <!--<Policies>-->
                <!--<TimeBasedTriggeringPolicy interval="1" modulate="true" />-->
            <!--</Policies>-->
            <!--<Filters>-->
                <!--<ThresholdFilter level="warn" onMatch="DENY" onMismatch="NEUTRAL"/>-->
                <!--<ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>-->
            <!--</Filters>-->
        <!--</RollingRandomAccessFile>-->

        <!--&lt;!&ndash;如果需要配置多个Rollingfile地址，还需要在root下添加appender-ref ref="ERR_LOG"/> 只显示error级别的信息 &ndash;&gt;-->
        <!--<RollingRandomAccessFile name="ERROR_LOG" fileName="${trans_log_path}/${file_prefix}error.log" filePattern="${trans_log_path}/${file_prefix}error.log.%d{yyyy-MM-dd}.log.gz">-->
            <!--<PatternLayout>-->
                <!--<pattern>${log_pattern}</pattern>-->
            <!--</PatternLayout>-->
            <!--<Policies>-->
                <!--<TimeBasedTriggeringPolicy interval="1" modulate="true" />-->
            <!--</Policies>-->
            <!--<Filters>-->
                <!--<ThresholdFilter level="error" onMatch="ACCEPT" onMismatch="DENY" />-->
            <!--</Filters>-->
        <!--</RollingRandomAccessFile>-->

        <!--&lt;!&ndash; DEBUG日志格式 &ndash;&gt;-->
        <!--<RollingRandomAccessFile name="DEBUG_LOG" fileName="${trans_log_path}/${file_prefix}debug.log" filePattern="${trans_log_path}/${file_prefix}debug.log.%d{yyyy-MM-dd}.log.gz">-->
            <!--<PatternLayout>-->
                <!--<pattern>${log_pattern}</pattern>-->
            <!--</PatternLayout>-->
            <!--<Policies>-->
                <!--<TimeBasedTriggeringPolicy interval="1" modulate="true" />-->
            <!--</Policies>-->
            <!--<Filters>-->
                <!--<ThresholdFilter level="info" onMatch="DENY" onMismatch="NEUTRAL"/>-->
                <!--<ThresholdFilter level="debug" onMatch="ACCEPT" onMismatch="NEUTRAL"/>-->
            <!--</Filters>-->
        <!--</RollingRandomAccessFile>-->

        <!--&lt;!&ndash; WARN_LOG日志格式 &ndash;&gt;-->
        <!--<RollingRandomAccessFile name="WARN_LOG" fileName="${trans_log_path}/${file_prefix}warn.log" filePattern="${trans_log_path}/${file_prefix}warn.log.%d{yyyy-MM-dd}.log.gz">-->
            <!--<PatternLayout>-->
                <!--<pattern>${log_pattern}</pattern>-->
            <!--</PatternLayout>-->
            <!--<Policies>-->
                <!--<TimeBasedTriggeringPolicy interval="1" modulate="true" />-->
            <!--</Policies>-->
            <!--<Filters>-->
                <!--<ThresholdFilter level="error" onMatch="DENY" onMismatch="NEUTRAL"/>-->
                <!--<ThresholdFilter level="warn" onMatch="ACCEPT" onMismatch="DENY"/>-->
            <!--</Filters>-->
        <!--</RollingRandomAccessFile>-->
    <!--</Appenders>-->

    <!--&lt;!&ndash;然后定义logger，只有定义了logger并引入的appender，appender才会生效 &ndash;&gt;-->
    <!--<Loggers>-->
        <!--&lt;!&ndash; 第三方日志系统 &ndash;&gt;-->
        <!--<Logger name="org" level="error" additivity="false">-->
            <!--<AppenderRef ref="DEBUG_LOG" />-->
            <!--<AppenderRef ref="INFO_LOG" />-->
            <!--<AppenderRef ref="WARN_LOG" />-->
            <!--<AppenderRef ref="ERROR_LOG" />-->
            <!--<AppenderRef ref="Console" />-->
        <!--</Logger>-->
        <!--<Logger name="org.apache" level="debug" additivity="false">-->
            <!--<AppenderRef ref="DEBUG_LOG" />-->
            <!--<AppenderRef ref="INFO_LOG" />-->
            <!--<AppenderRef ref="WARN_LOG" />-->
            <!--<AppenderRef ref="ERROR_LOG" />-->
            <!--<AppenderRef ref="Console" />-->
        <!--</Logger>-->

        <!--<Logger name="org.springframework.web" level="debug" additivity="false">-->
            <!--<AppenderRef ref="DEBUG_LOG" />-->
            <!--<AppenderRef ref="INFO_LOG" />-->
            <!--<AppenderRef ref="WARN_LOG" />-->
            <!--<AppenderRef ref="ERROR_LOG" />-->
            <!--<AppenderRef ref="Console" />-->
        <!--</Logger>-->
        <!--<Logger name="org.springframework" level="error" additivity="false">-->
            <!--<AppenderRef ref="DEBUG_LOG" />-->
            <!--<AppenderRef ref="INFO_LOG" />-->
            <!--<AppenderRef ref="WARN_LOG" />-->
            <!--<AppenderRef ref="ERROR_LOG" />-->
            <!--<AppenderRef ref="Console" />-->
        <!--</Logger>-->
        <!--<Logger name="org.springframework.transaction" level="debug" additivity="false">-->
            <!--<AppenderRef ref="DEBUG_LOG" />-->
            <!--<AppenderRef ref="INFO_LOG" />-->
            <!--<AppenderRef ref="WARN_LOG" />-->
            <!--<AppenderRef ref="ERROR_LOG" />-->
            <!--<AppenderRef ref="Console" />-->
        <!--</Logger>-->

        <!--&lt;!&ndash; 配置日志的根节点，建立一个默认的root的logger，需要在root的level中指定输出的级别  &ndash;&gt;-->
        <!--<Root level="${output_log_level}">-->
            <!--<appender-ref ref="DEBUG_LOG" />-->
            <!--<appender-ref ref="INFO_LOG" />-->
            <!--<appender-ref ref="WARN_LOG" />-->
            <!--<appender-ref ref="ERROR_LOG" />-->
            <!--<appender-ref ref="Console" />-->
        <!--</Root>-->

    <!--</Loggers>-->

<!--</Configuration>-->